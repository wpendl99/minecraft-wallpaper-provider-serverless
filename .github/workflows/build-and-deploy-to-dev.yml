name: Build and Deploy to Dev

on:
    push:
        branches-ignore:
            - main

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.set_version.outputs.version }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"

            - name: set version
              id: set_version
              run: |
                  version=$(date +'%Y%m%d.%H%M%S')
                  echo "version=$version" >> "$GITHUB_OUTPUT"
                  printf '{"version": "%s" }' "$version" > version.json

            - name: Install dependencies
              run: npm install

            - name: Prepare Lambda Build function
              run: |
                  mkdir -p build
                  cp -r src/* build/
                  cp -r node_modules build/
                  cp package.json build/
                  cp package-lock.json build/
                  cp version.json build/

            - name: Zip Lambda function
              run: |
                  zip -r ./minecraft-wallpaper-lambda-$version.zip ./build  # Versioned filename with date and time
                  echo "VERSION=$version" >> $GITHUB_ENV  # Save version to environment

            - name: Update dist artifact
              uses: actions/upload-artifact@v4
              with:
                  name: zipped-lambda
                  path: ./minecraft-wallpaper-lambda-$version.zip

    deploy:
        name: Deploy
        needs: build
        permissions:
            id-token: write
        runs-on: ubuntu-latest
        environment:
            name: development
        env:
            version: ${{ needs.build.outputs.version }}
        steps:
            - name: Set up AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  audience: sts.amazonaws.com
                  aws-region: us-east-1
                  role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.CI_IAM_ROLE}}

            - name: Download dist artifact
              uses: actions/download-artifact@v4
              with:
                  name: zipped-lambda
                  path: build

            - name: Upload Lambda Code to S3
              run: |
                  aws s3 cp ./build/minecraft-wallpaper-lambda-$version.zip s3://${{ secrets.S3_RELEASE_BUCKET_NAME }}/minecraft-wallpaper-lambda-$version.zip

            - name: Deploy to Dev Environment
              run: |
                  aws cloudformation deploy \
                    --template-file ./cloudformation/template.yml \
                    --stack-name my-stack-dev \
                    --parameter-overrides Environment=dev CodeS3Key=my-lambda-$VERSION.zip \
                    --capabilities CAPABILITY_NAMED_IAM

    release:
        name: Release
        needs:
            - build
            - deploy
        runs-on: ubuntu-latest
        steps:
            - name: Create Release
              uses: ncipollo/release-action@v1
              env:
                  version: ${{needs.build.outputs.version}}
              with:
                  tag: version-${{ env.version }}
                  name: Version ${{ env.version }}
                  body: |
                      ## ðŸš€ Changes

                      ${{ github.event.head_commit.message }}

                      **commit**: ${{ github.sha }}
